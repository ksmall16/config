# unset global Git password
gitUnsetPassword() {
  git config --global credential.helper osxkeychain
}

# turn on LFG proxy
proxyOn() {
  export http_proxy=http://localhost:3128 && export https_proxy=http://localhost:3128
}

# turn off LFG proxy
proxyOff() {
  unset http_proxy https_proxy
}


# git update date to current date & time
gitDate() {
  git commit  --amend --date="$(date -R)"
}

lmbM2() {
  cp ~/.m2/settings-lmb.xml ~/.m2/settings.xml
}

lfgM2() {
  cp ~/.m2/settings-lfg.xml ~/.m2/settings.xml
}

convertToProps() {
  python ~/Desktop/Workspace/yaml2props/yaml2props.py $1
}

startPostgres() {
  pg_ctl -D /usr/local/var/postgres start
}


#bffDev() {
#  npm run start:dev  
#}

# [M]aven [C]lean [I]nstall
mciu() {
  mvn clean install -U
}

# shortcut to rename files
rename() {
  mv -i -v $1 $2
}

# [F]ind [P]id
# find the pid of a process with given string
findPid () {
  lsof -t -c "$@" ;
}

# --- [F]ind [D]irectory ---
# search for directory by name in current location
fd() {
  sudo find -type d -name "$1" -print
}

# --- [F]ind [F]ile ---
# search for file by name in current location
ff() {
  sudo find -type f -name "$1" -print
}

# --- [F]ind [D]irectory [R]ecursively ---
# search for directory by name recursively
fdr() {
  sudo find ./* -type d -name "$1" -print
}

# --- [F]ind [F]ile [R]ecursively ---
# search for file by name recursively
ffr() {
  sudo find ./* -type f -name "$1" -print
}

# --- [F]ind [S]tring [R]ecursively ---
# search for a given string recursively in directory
fsr() {
  grep -lrw $1 .
}

# --- [C]lean, [P]ackage, and [S]tart API ---
# for use with Serverless functions
cps() {
  mvn clean &&
  mvn package &&
  sam local start-api -t serverless.yml;
}

# --- Restart BTT ---
# Restarts BetterTouchTool and 2 helpers when it acts up, then restarts
restartBTT() {
  kill $(ps aux | grep BetterTouchTool | grep -v grep | awk '{print $2}')
  open /Applications/BetterTouchTool.app/
}

tree.exceptNodeModules() {
  tree -I "node_modules"
}

#--- [T]rash ---#
# moves given file to trash
trash() {
  command mv "$@" ~/.Trash ;
}

# --- [F]ind [P]ort ---
# find process running on port $1
findPort() {
  lsof -i tcp:$1
}

# --- Global Extract --- #
# will extract many file types
extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xvjf $1    ;;
      *.tar.gz)    tar xvzf $1    ;;
      *.bz2)       bunzip2 $1     ;;
      *.rar)       rar x $1       ;;
      *.gz)        gunzip $1      ;;
      *.tar)       tar xvf $1     ;;
      *.tbz2)      tar xvjf $1    ;;
      *.tgz)       tar xvzf $1    ;;
      *.zip)       unzip $1       ;;
      *.Z)         uncompress $1  ;;
      *.7z)        7z x $1        ;;
      *)           echo "don't know how to extract '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

squash() {
  git rebase -i HEAD~$1  
}

# A motivating welcome message after sourcing
welcomeMessage() {
  echo ''
  fortune | lolcat
  echo ''
}
